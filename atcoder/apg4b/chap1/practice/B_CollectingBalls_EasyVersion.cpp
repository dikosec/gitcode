/*
QUESTION    :xy平面上にN個のボールがあります。このうちi番目のボールの位置は(xi,i)です。したがって、N本の直線y=1,y=2,...,y=Nの上にそれぞれ1個ずつボールがあることになります。
             すぬけ君は、これらのボールを回収するために、タイプA,BのロボットをN台ずつ用意しました。さらに、タイプAのロボットのうちi台目のものを位置(0,i)に、タイプBのロボット
             のうちi台目のものを位置(K,i)に設置しました。したがってN本の直線y=1,y=2,...,y=Nの上にそれぞれ1台のタイプAのロボットと1台のタイプBロボットが設置されたことになります。
             それぞれのタイプのロボットは起動されると以下のように動作します。
                タイプAのロボットは、位置(0,a)で起動されると、直線y=a上にあるボールの位置まで移動し、ボールを回収してもとの位置(0,a)に戻って停止する。そのようなボールが存在しない
                場合は何もせずに停止する。
                タイプBのロボットは、位置(K,b)で起動されると、直線y=b上にあるボールの位置まで移動し、ボールを回収してもとの位置(K,b)に戻って停止する。そのようなボールが存在しない
                場合は何もせずに停止する。
            これら2N台のロボットのうちいくつかを起動してボールをすべて回収するとき、ロボットの移動距離の総和として考えられる値のうち最小のものを求めてください。

CONST       :1<=N<=100
             1<=K<=100
             0<xi<K
             INPUT are all integer

INPUT       :N
             K
             x1 x2 ... xN

OUTPUT      :ロボットの移動距離の総和として考えられる値のうち最小のものを出力せよ。

*/
#include<bits/stdc++.h>
using namespace std;

int main(){
    int N,K,x,i;
    int result=0;

    cin >> N >> K;

    for(i=1;i<=N;i++){
        cin >> x;
        if((K-x)<x){
            result+=2*(K-x);
        }
        else{
            result+=2*x;
        }
    }
    cout << result << endl;
}